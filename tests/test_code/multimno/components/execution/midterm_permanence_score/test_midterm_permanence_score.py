from pyspark.testing.utils import assertDataFrameEqual

from multimno.core.configuration import parse_configuration

from multimno.core.data_objects.silver.silver_midterm_permanence_score_data_object import (
    SilverMidtermPermanenceScoreDataObject,
)

from multimno.components.execution.midterm_permanence_score.midterm_permanence_score import (
    MidtermPermanenceScore,
)

from multimno.core.constants.columns import ColNames

from tests.test_code.fixtures import spark_session as spark
from tests.test_code.multimno.components.execution.midterm_permanence_score.aux_midterm_permanence_score import (
    expected_midterm_ps,
    set_input_data,
)
from tests.test_code.test_common import TEST_RESOURCES_PATH, TEST_GENERAL_CONFIG_PATH
from tests.test_code.test_utils import setup_test_data_dir, teardown_test_data_dir


fixtures = [spark, expected_midterm_ps]


def setup_function():
    setup_test_data_dir()


def teardown_function():
    teardown_test_data_dir()


def test_midterm_ps(spark, expected_midterm_ps):
    """
    DESCRIPTION:
        Test shall execute the MidtermPermanenceScore component with a datafrane that has two days of data in daily permanence score, and no night time data.

    INPUT:
        Test Configs:
            general: tests/test_resources/config/general_config.ini
            component: tests/test_resources/config/midterm_analysis/testing_midterm_permanence_score.ini
        Input Data:
            midterm_permanence_score: /opt/testing_data/..., generated by aux_midterm_permanence_score.set_input_data

    EXPECTED OUTPUT:
        midterm_permanence_score: (fixture) aux_midterm_permanence_score.expected_midterm_ps

    STEPS:
        1.- Init the MidtermPermanenceScore component with test configs.
        2.- Write input data in /opt/testing_data
        3.- Read expected data with SilverMidtermPermanenceScoreDataObject class (fixture)
        4.- Execute the MidtermPermanenceScore component.
        5.- Read written data in /opt/testing_data with SilverMidtermPermanenceScoreDataObject.
        6.- Assert midterm permanence score DataFrames are equal.
    """
    # Setup

    # init configs and pathsg

    component_config_path = f"{TEST_RESOURCES_PATH}/config/midterm_analysis/testing_midterm_permanence_score.ini"
    config = parse_configuration(TEST_GENERAL_CONFIG_PATH, component_config_path)

    # init component class
    midterm_ps = MidtermPermanenceScore(TEST_GENERAL_CONFIG_PATH, component_config_path)

    # create input data
    set_input_data(spark, config)

    # Expected (defined as fixture)

    # Execution
    midterm_ps.execute()

    # Assertion
    # read from test data output
    output_events_data_object = midterm_ps.output_data_objects[SilverMidtermPermanenceScoreDataObject.ID]
    output_events_data_object.read()

    assertDataFrameEqual(output_events_data_object.df, expected_midterm_ps)
